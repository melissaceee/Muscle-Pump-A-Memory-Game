
    const cards = [
        '1','2','3','4','5','6','7','8','9','10',
        '1','2','3','4','5','6','7','8','9','10'
    ]; // these are going to represent every square in the game, its duplicated to match 

    let flippedCards = []; 
    let matchedCards = [];


    let startingTime = 45 // establishing length of game 
    const timer = document.getElementById('time-left'); //accessing the element (div) 
    in the html file (DOM) below: the function is establishing when timer starts it will deaulft 5 seconds
    and decrease by 1 sc as time goes on- if tge timer hits 0 then the timer will stop and the message to player is
    you lost the game.
    innerhtml accesses the x element you are reffering to (html data?)
    the const interval is calling the timer to update by seconds:
    JS the seconds are in milliseconds (by the thousands)

    function updateTimer (){
        timer.innerHTML = `${startingTime}`
        startingTime-=1 //decrement by one second
        if(startingTime < 0) {
            clearInterval (interval);
            const results = document.getElementById('game-result');  
            results.innerHTML = `${'You Lose, try again!!!'}`
        }
       
    }
    const interval = setInterval(updateTimer, 1000) // has to be in milliseconds
    

    // below function is meant to shuffle the game cards after game is over. 
    the for loop is asking the computer
     to go through each and every card to swap the the current position of card to random index


     function shuffle(array){
        for (let i = 0; i<array.length; i++){
           let randomNumber =  Math.floor (Math.random()* array.length)
           let temp = array [i]
           array[i] = array[randomNumber]
           array [randomNumber] = temp
        }
    }
 

// function to start game- within the shuffled cards array, access all (class) cards- 
for each 'card' element set the value from shuffle array as data attribute value
the event listener enables user click to reveal the card value 


function startGame() {
    shuffle(cards);
    const cardValue = document.querySelectorAll('.card');
    cardValue.forEach((div, index) => {
        div.dataset.value = cards[index];
        div.addEventListener('click', showCard);
    })


//this function is calling the game to show all of the card values in the beggining- this is needed in order for user to 
try to remember placement and start to play

calling all the card elements within the class card
for each card element = display the card value => show data value
    function showAllCards() {
    const allCards = document.querySelectorAll('.card');
    allCards.forEach(card => {
        card.textContent = card.dataset.value;
    });
}


//after you show the card for 5 seconds, same needs to unreveal the card
 and the timer will start with 45 seconds counting down

 //calling all the card elements within the class card
for each card element = display the card value => show data value

 function hideAllCards() {
    const allCards = document.querySelectorAll('.card');
    allCards.forEach(card => {
        card.textContent = '';
    });

// this setinterval is commonly used for timer - help guide provided in slack channel by josh smith
    interval = setInterval(updateTimer, 1000);
}

try to start the game -initialize
startGame()

create the if statements or conditions of the game for the matched cards = if all cards are matched within the
45 second timer then the the player wins the game.

the time has to be in milliseconds example 1000= 1 sec, 2000= 2 sec

when the use cicks the two cards this fuction will call and see if the numbers match up -if the data attributes match up 
there cards will be in the matched class and move to this matched array 
if it values do not match (the set timeOUt) statement is letting machine know that 
then the cards 'clicked' value will dissapear after 5 seconds - passing it back as empty value/string


function checkMatch() {
    const [card1, card2] = clickedCards;
    if (card1.dataset.value === card2.dataset.value) {
        card1.classList.add('matched');
        card2.classList.add('matched');
        matchedCards.push(card1, card2);
    } else {
        setTimeout(() => {
            card1.classList.remove('clicked');
            card2.classList.remove('clicked');
            card1.textContent = '';
            card2.textContent = '';
        }, 500);
    }
    clickedCards = [];   

    creating the logic for the winning message- if user matches all cards in the game within 45 seconds then the you win message
    is displayed. 

    if (matchedCards.length === cards.length) {
        clearInterval(interval);
        const results = document.getElementById('game-result');
        results.classList.add('game-result-win');
        setTimeout(() => results.innerHTML = 'Winner winner chick dinner!!!', 500);
    }
}